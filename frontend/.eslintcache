[{"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\index.js":"1","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\UI\\atoms\\Button.js":"2","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\CompInfo.js":"3","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\store\\index.js":"4","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\UI\\atoms\\BoardInputForm.js":"5","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\rootReducer.js":"6","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\extra.js":"7","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\RootReducer.js":"8","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\Extra.js":"9","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\Counter.js":"10","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\Paging.js":"11","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\HTTP.js":"12","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\Home.js":"13","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\Router.js":"14","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\SearchReducer.js":"15","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\NavBar.js":"16","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\Chart.js":"17","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\FinancialTable.js":"18","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\PerformSearch.js":"19","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\CompanyBoard.js":"20","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\NotFound.js":"21","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\LinkedList.js":"22","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\FinSearchTable.js":"23"},{"size":1358,"mtime":1627182788617,"results":"24","hashOfConfig":"25"},{"size":719,"mtime":1616582396855,"results":"26","hashOfConfig":"27"},{"size":2405,"mtime":1627031411595,"results":"28","hashOfConfig":"25"},{"size":235,"mtime":1614057590430,"results":"29","hashOfConfig":"25"},{"size":1193,"mtime":1625029349568,"results":"30","hashOfConfig":"25"},{"size":699,"mtime":1616047365748,"results":"31","hashOfConfig":"27"},{"size":255,"mtime":1616047354951,"results":"32","hashOfConfig":"25"},{"size":893,"mtime":1626507800108,"results":"33","hashOfConfig":"25"},{"size":255,"mtime":1616047354951,"results":"34","hashOfConfig":"27"},{"size":2929,"mtime":1618032015001,"results":"35","hashOfConfig":"25"},{"size":6334,"mtime":1627165858196,"results":"36","hashOfConfig":"25"},{"size":2063,"mtime":1625543786517,"results":"37","hashOfConfig":"25"},{"size":11303,"mtime":1627612367430,"results":"38","hashOfConfig":"25"},{"size":1329,"mtime":1627199165186,"results":"39","hashOfConfig":"25"},{"size":913,"mtime":1626770970183,"results":"40","hashOfConfig":"25"},{"size":3367,"mtime":1627369337013,"results":"41","hashOfConfig":"25"},{"size":11087,"mtime":1627368804906,"results":"42","hashOfConfig":"25"},{"size":8121,"mtime":1627540829164,"results":"43","hashOfConfig":"25"},{"size":5585,"mtime":1627481551447,"results":"44","hashOfConfig":"25"},{"size":701,"mtime":1627031381336,"results":"45","hashOfConfig":"25"},{"size":270,"mtime":1627031385656,"results":"46","hashOfConfig":"25"},{"size":1992,"mtime":1627478020580,"results":"47","hashOfConfig":"25"},{"size":14979,"mtime":1627629586286,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"130xh85",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"zefywn",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\index.js",[],["104","105"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\UI\\atoms\\Button.js",[],["106","107"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\CompInfo.js",[],["108","109"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\store\\index.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\UI\\atoms\\BoardInputForm.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\rootReducer.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\extra.js",[],["110","111"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\RootReducer.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\Extra.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\Counter.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\Paging.js",["112","113","114"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\HTTP.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\Home.js",["115","116","117","118","119"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\Router.js",["120"],"import React from 'react';\r\nimport { BrowserRouter as Router,\r\n    Route, \r\n    Link, \r\n    Switch } from 'react-router-dom';\r\n\r\n/* components */\r\nimport NotFound from '../components/NotFound';\r\nimport Home from './Home';\r\n\r\nexport default function Routing () {\r\n\r\n    // url 이동할 때 이전 앱의 상태값은 날라가지 않는다.\r\n    // 개발진행이 멈칫할때는 이해 안되는 부분 파악해서 바로 공부하기\r\n    // 현재 문제점 컴포넌트 자체에 링크를 걸어버려서 해당 컴포넌트 안에 어떤 요소가 있던 클릭하면 같은 위치로 이동되버린다.\r\n    // 라우터 사용법을 좀 더 공부해야한다. (라우터 기능의 개념 이해하기)\r\n    return (\r\n        <Router>\r\n                    {/* <ul>\r\n                        <li><Link to=\"/companylist\">기업리스트</Link></li>\r\n                    </ul> */}\r\n\r\n                {/* 주소창의 경로와 매칭될 경우 보여줄 컴포넌트 할당 */}\r\n                {/* path에 후행 슬래시를 넣지 않으면 빌드시 에러 발생 예: /companylist (x) /companylist/ (o) */}\r\n                <Switch>\r\n                    <Route path=\"/\"  exact={true}><Home /></Route>\r\n                    <Route path=\"*\"><NotFound /></Route>\r\n                </Switch>\r\n\r\n        </Router>\r\n    );\r\n}","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\SearchReducer.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\NavBar.js",["121","122","123"],"import React, { useState, useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport { companyInfoActionObject } from '../modules/SearchReducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// 리덕스를 사용해서 검색한 종목코드 또는 종목명 데이터를 넘겨야 겠다.\r\n// 코스피, 코스닥, 금리, VIX 지수를 실시간 확인할수 있도록 기능을 넣어야한다.\r\n\r\n/*\r\n  1. 기본 검색 기능\r\n  2. 검색어 미리보기 기능\r\n  3. 최근 가격 표시\r\n*/ \r\nexport default function TitelBar () {\r\n    const dispatch = useDispatch();\r\n    \r\n    const getCompanyInfo = async(e) => {\r\n        try{\r\n            e.preventDefault();  // 페이지 새로고침 막기\r\n            const keyword = e.target.keyword.value;\r\n\r\n            // keyword가 int인지 string 인지 분기 처리\r\n            if (isNaN(keyword)) {\r\n                // 종목명일 경우 (true)\r\n                const url = `http://localhost:8000/api/company/?company=${keyword}`  // 개발용\r\n                // const url = `/api/company/?company=${keyword}`;  // 배포용\r\n                const request = await axios.get(url);\r\n                const code = request.data[0].code;\r\n\r\n                // 리덕스 전달\r\n                dispatch(companyInfoActionObject(code,keyword));\r\n            }else {\r\n                // 종목코드일 경우 (false)\r\n                const url = `http://localhost:8000/api/company/?code=${keyword}`;  // 개발용\r\n                // const url = `/api/company/?code=${keyword}`;  // 배포용\r\n                const request = await axios.get(url);\r\n                const comp_nm = request.data[0].company;\r\n\r\n                // 리덕스 전달\r\n                dispatch(companyInfoActionObject(keyword,comp_nm));\r\n            }\r\n\r\n        } catch (error) {\r\n            // 검색이 되지 않았을 경우, 간단한 알림 띄우기(은은하게 떳다 사라지는게 좋을거 같음)\r\n            \r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\" >\r\n                <a href=\"#home\" className=\"navbar-brand\">STOCKMAN</a>\r\n\r\n                {/* search bar */}\r\n                <ul className=\"navbar-nav me-auto mt-md-0 \">\r\n                    <li className=\"nav-item hidden-sm-down\">\r\n                        <form className=\"app-search ps-3\" onSubmit={getCompanyInfo}>\r\n                            <input type=\"text\" name='keyword' className=\"form-control\" placeholder=\"종목검색\"/> \r\n                                <a className=\"srh-btn\">\r\n                                    <i className=\"ti-search\">\r\n                                        {/* 검색 */}\r\n                                    </i>\r\n                                </a>\r\n                        </form>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"me-auto navbar-nav\">\r\n                    {/* <a href=\"#home\" data-rb-event-key=\"#home\" className=\"nav-link active\">Home</a>\r\n                    <a href=\"#features\" data-rb-event-key=\"#features\" className=\"nav-link\">Features</a>\r\n                    <a href=\"#pricing\" data-rb-event-key=\"#pricing\" className=\"nav-link\">Pricing</a> */}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n}","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\Chart.js",["124","125"],"import React, { useEffect, useRef, useState }  from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n\r\n/*\r\n  1. 디스포즈 구현 (DOM 제어 에러 발생)\r\n  2. 성능 최적화 (느림)\r\n  3. UI 꾸미기 (버튼, from, to input 상자, 캔들 색상)\r\n  4. 수정주가 계산및 구현\r\n  5. 이동평균선, MACD, 추세선등등 기능 확장\r\n*/\r\n\r\nexport default function Charts () {\r\n  const chart = useRef(null);\r\n\r\n  // 입력받은 기업명 또는 종목코드 가져오기 \r\n  const { code, compName } = useSelector(\r\n    state => ({\r\n        code: state.searchReducer.code,\r\n        compName: state.searchReducer.comp_name,\r\n    }), shallowEqual);\r\n\r\n  // 라이프 사이클을 고려하지 않으면 새로고침할때 2개의 차트가 생겨버린다.\r\n  useEffect(() => {\r\n      /* Chart code */\r\n      // Themes begin\r\n      am4core.useTheme(am4themes_animated);\r\n      //Themes end\r\n\r\n      // Create chart \r\n      let x = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n      x.padding(0, 15, 0, 15);\r\n\r\n      // Load data : 쿼리스트링 처리 해야할듯\r\n      // chart.dataSource.url = \"https://www.amcharts.com/wp-content/uploads/assets/stock/MSFT.csv\";\r\n      // chart.dataSource.parser = new am4core.CSVParser();\r\n\r\n      /* 데이터를 취득하지 못했던 이유: \r\n         1. 쿼리스트링 오타 => code를 id로 표시함\r\n         2. 백엔드에서 페이징을 걸어버려서 JSON 형식이 amcharts4가 읽지 못하는 형식이 되버림\r\n      */ \r\n\r\n      x.dataSource.url = `http://localhost:8000/api/daily-price/?code=${code}`;  // 개발용\r\n      // x.dataSource.url = `/api/daily-price/?code=${code}`;  // 배포용\r\n\r\n      x.dataSource.parser = new am4core.JSONParser();\r\n      x.dataSource.parser.options.emptyAs = 0;\r\n\r\n      x.dataSource.parser.options.useColumnNames = true;\r\n      x.dataSource.parser.options.reverse = true;\r\n\r\n      // the following line makes value axes to be arranged vertically.\r\n      x.leftAxesContainer.layout = \"vertical\";\r\n\r\n\r\n      // 여기서부터 라이브러리의 빠른 테스트를 위해 복붙함\r\n      // uncomment this line if you want to change order of axes\r\n      //chart.bottomAxesContainer.reverseOrder = true;\r\n\r\n      let dateAxis = x.xAxes.push(new am4charts.DateAxis());\r\n      dateAxis.renderer.grid.template.location = 0;\r\n      dateAxis.renderer.ticks.template.length = 8;\r\n      dateAxis.renderer.ticks.template.strokeOpacity = 0.1;\r\n      dateAxis.renderer.grid.template.disabled = true;\r\n      dateAxis.renderer.ticks.template.disabled = false;\r\n      dateAxis.renderer.ticks.template.strokeOpacity = 0.2;\r\n      dateAxis.renderer.minLabelPosition = 0.01;\r\n      dateAxis.renderer.maxLabelPosition = 0.99;\r\n      dateAxis.keepSelection = true;\r\n      dateAxis.minHeight = 30;\r\n\r\n      dateAxis.groupData = true;\r\n      dateAxis.minZoomCount = 5;\r\n\r\n      // these two lines makes the axis to be initially zoomed-in\r\n      // dateAxis.start = 0.7;\r\n      // dateAxis.keepSelection = true;\r\n\r\n      let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\r\n      valueAxis.tooltip.disabled = true;\r\n      valueAxis.zIndex = 1;\r\n      valueAxis.renderer.baseGrid.disabled = true;\r\n      // height of axis\r\n      valueAxis.height = am4core.percent(65);\r\n\r\n      valueAxis.renderer.gridContainer.background.fill = am4core.color(\"#000000\");\r\n      valueAxis.renderer.gridContainer.background.fillOpacity = 0.05;\r\n      valueAxis.renderer.inside = true;\r\n      valueAxis.renderer.labels.template.verticalCenter = \"bottom\";\r\n      valueAxis.renderer.labels.template.padding(1, 1, 1, 1);\r\n\r\n      //valueAxis.renderer.maxLabelPosition = 0.95;\r\n      valueAxis.renderer.fontSize = \"0.8em\"\r\n\r\n      let series = x.series.push(new am4charts.CandlestickSeries());\r\n      series.dataFields.dateX = \"date\";\r\n      series.dataFields.openValueY = \"open\";\r\n      series.dataFields.valueY = \"close\";\r\n      series.dataFields.lowValueY = \"low\";\r\n      series.dataFields.highValueY = \"high\";\r\n      series.clustered = false;\r\n      series.tooltipText = \"open: {openValueY.value}\\nlow: {lowValueY.value}\\nhigh: {highValueY.value}\\nclose: {valueY.value}\";\r\n      series.name = \"JSON\";\r\n      series.defaultState.transitionDuration = 0;\r\n\r\n\r\n      let valueAxis2 = x.yAxes.push(new am4charts.ValueAxis());\r\n      valueAxis2.tooltip.disabled = true;\r\n      // height of axis\r\n      valueAxis2.height = am4core.percent(35);\r\n      valueAxis2.zIndex = 3\r\n      // this makes gap between panels\r\n      valueAxis2.marginTop = 30;\r\n      valueAxis2.renderer.baseGrid.disabled = true;\r\n      valueAxis2.renderer.inside = true;\r\n      valueAxis2.renderer.labels.template.verticalCenter = \"bottom\";\r\n      valueAxis2.renderer.labels.template.padding(2, 2, 2, 2);\r\n      //valueAxis.renderer.maxLabelPosition = 0.95;\r\n      valueAxis2.renderer.fontSize = \"0.8em\"\r\n\r\n      valueAxis2.renderer.gridContainer.background.fill = am4core.color(\"#000000\");\r\n      valueAxis2.renderer.gridContainer.background.fillOpacity = 0.05;\r\n\r\n      let series2 = x.series.push(new am4charts.ColumnSeries());\r\n      series2.dataFields.dateX = \"date\";\r\n      series2.clustered = false;\r\n      series2.dataFields.valueY = \"volume\";\r\n      series2.yAxis = valueAxis2;\r\n      series2.tooltipText = \"{valueY.value}\";\r\n      series2.name = \"Series 2\";\r\n      // volume should be summed\r\n      series2.groupFields.valueY = \"sum\";\r\n      series2.defaultState.transitionDuration = 0;\r\n\r\n      x.cursor = new am4charts.XYCursor();\r\n\r\n      let scrollbarX = new am4charts.XYChartScrollbar();\r\n\r\n      let sbSeries = x.series.push(new am4charts.LineSeries());\r\n      sbSeries.dataFields.valueY = \"close\";\r\n      sbSeries.dataFields.dateX = \"date\";\r\n      scrollbarX.series.push(sbSeries);\r\n      sbSeries.disabled = true;\r\n      scrollbarX.marginBottom = 20;\r\n      x.scrollbarX = scrollbarX;\r\n      scrollbarX.scrollbarChart.xAxes.getIndex(0).minHeight = undefined;\r\n\r\n\r\n\r\n      /**\r\n       * Set up external controls\r\n       */\r\n\r\n      // Date format to be used in input fields\r\n      let inputFieldFormat = \"yyyy-MM-dd\";\r\n\r\n      // dispose후에 버튼을 제어할려고 하니까 에러가 발생한다. document를 직접 제어하는 방법 말고 다른 방법을 써야 한다.\r\n      document.getElementById(\"b1m\").addEventListener(\"click\", function() {\r\n        let max = dateAxis.groupMax[\"day1\"];\r\n        let date = new Date(max);\r\n        am4core.time.add(date, \"month\", -1);\r\n        zoomToDates(date);\r\n      });\r\n      \r\n      document.getElementById(\"b3m\").addEventListener(\"click\", function() {\r\n        let max = dateAxis.groupMax[\"day1\"];\r\n        let date = new Date(max);\r\n        am4core.time.add(date, \"month\", -3);\r\n        zoomToDates(date);\r\n      });\r\n      \r\n      document.getElementById(\"b6m\").addEventListener(\"click\", function() {\r\n        let max = dateAxis.groupMax[\"day1\"];\r\n        let date = new Date(max);\r\n        am4core.time.add(date, \"month\", -6);\r\n        zoomToDates(date);\r\n      });\r\n      \r\n      document.getElementById(\"b1y\").addEventListener(\"click\", function() {\r\n        let max = dateAxis.groupMax[\"day1\"];\r\n        let date = new Date(max);\r\n        am4core.time.add(date, \"year\", -1);\r\n        zoomToDates(date);\r\n      });\r\n      \r\n      document.getElementById(\"bytd\").addEventListener(\"click\", function() {\r\n        let max = dateAxis.groupMax[\"day1\"];\r\n        let date = new Date(max);\r\n        am4core.time.round(date, \"year\", 1);\r\n        zoomToDates(date);\r\n      });\r\n      \r\n      document.getElementById(\"bmax\").addEventListener(\"click\", function() {\r\n        let min = dateAxis.groupMin[\"day1\"];\r\n        let date = new Date(min);\r\n        zoomToDates(date);\r\n      });\r\n\r\n      dateAxis.events.on(\"selectionextremeschanged\", function() {\r\n        updateFields();\r\n      });\r\n\r\n      dateAxis.events.on(\"extremeschanged\", updateFields);\r\n\r\n\r\n      function updateFields () {\r\n        let minZoomed = dateAxis.minZoomed + am4core.time.getDuration(dateAxis.mainBaseInterval.timeUnit, dateAxis.mainBaseInterval.count) * 0.5;\r\n        document.getElementById(\"fromfield\").value = x.dateFormatter.format(minZoomed, inputFieldFormat);\r\n        document.getElementById(\"tofield\").value = x.dateFormatter.format(new Date(dateAxis.maxZoomed), inputFieldFormat);\r\n      };\r\n\r\n\r\n      // fromRef.current.addEventListener(\"keyup\", updateZoom)\r\n\r\n      document.getElementById(\"fromfield\").addEventListener(\"keyup\", updateZoom);\r\n      document.getElementById(\"tofield\").addEventListener(\"keyup\", updateZoom);\r\n\r\n      let zoomTimeout;\r\n      function updateZoom() {\r\n        if (zoomTimeout) {\r\n          clearTimeout(zoomTimeout);\r\n        }\r\n        zoomTimeout = setTimeout(function(e) {\r\n          let start = document.getElementById(\"fromfield\").value;\r\n          let end = document.getElementById(\"tofield\").value;\r\n          if ((start.length < inputFieldFormat.length) || (end.length < inputFieldFormat.length)) {\r\n            return;\r\n          }\r\n          let startDate = x.dateFormatter.parse(start, inputFieldFormat);\r\n          let endDate = x.dateFormatter.parse(end, inputFieldFormat);\r\n\r\n          if (startDate && endDate) {\r\n            dateAxis.zoomToDates(startDate, endDate);\r\n          }\r\n        }, 500);\r\n      };\r\n\r\n      function zoomToDates(date) {\r\n        let min = dateAxis.groupMin[\"day1\"];\r\n        let max = dateAxis.groupMax[\"day1\"];\r\n        dateAxis.keepSelection = true;\r\n      //   dateAxis.start = (date.getTime() - min)/(max - min);\r\n      //   dateAxis.end = 1;\r\n\r\n        dateAxis.zoom({start:(date.getTime() - min)/(max - min), end:1});\r\n    };\r\n\r\n    chart.current = x;\r\n\r\n    return () => {\r\n      // 디스포즈 구현하기\r\n      // x.dispose();\r\n    };\r\n\r\n  }, [code]);\r\n\r\n    /* HTML */ \r\n    return (\r\n      <div className=\"chart-div\">\r\n          <div id=\"controls\" className=\"controls-div\">\r\n              <div className=\"chart-input-div\">\r\n                      기간: <input  type=\"text\" id=\"fromfield\" className=\"amcharts-input\"/>\r\n                      ~   <input type=\"text\" id=\"tofield\" className=\"amcharts-input\"/>\r\n              </div>\r\n\r\n              <div className=\"chart-btns-div\">\r\n                  <button id=\"b1m\" className=\"btn btn-outline-primary\">1개월</button>\r\n                  <button id=\"b3m\" className=\"btn btn-outline-primary\">3개월</button>\r\n                  <button id=\"b6m\" className=\"btn btn-outline-primary\">6개월</button>\r\n                  <button id=\"b1y\" className=\"btn btn-outline-primary\">1년</button>\r\n                  <button id=\"bytd\" className=\"btn btn-outline-primary\">연초누계</button>\r\n                  <button id=\"bmax\" className=\"btn btn-outline-primary\">전체</button>\r\n              </div>\r\n            \r\n          </div>\r\n\r\n      {/* 차트 구현 코드 */}\r\n      <div id=\"chartdiv\" className=\"chart-candle-div\" ></div>\r\n      </div>\r\n    );\r\n};","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\FinancialTable.js",["126","127","128"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\PerformSearch.js",["129","130","131","132","133","134","135","136","137"],"/* 조건검색 */\r\nimport React, { useState, useEffect  }  from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport LinkedList from './LinkedList';\r\n\r\n\r\n/*\r\n    1. 조건 입력 아이템 추가, 삭제\r\n    2. 셀렉트 옵션 설정 (옵션 중복을 어떻게 제외시키지?)\r\n    3. url, quearyString 조합하기\r\n    4. 연도는 무조건 최근 연도, 최근 연도라는걸 안내 문구 표시\r\n*/\r\nexport default function PerformSearch () {\r\n    /* JS */\r\n    // 상태\r\n    let [indexNum, setIndexNum] = useState(0);\r\n    let [itemArr, setItemArr] = useState([]);\r\n\r\n    const rootUrl = `http://localhost:8000/api/company-state/`;  // 개발용\r\n    // const rootUrl = `/api/company-state/`;  // 배포용\r\n    let linkedList = new LinkedList();\r\n\r\n    // linkedList.append(\"hello\");\r\n    // linkedList.append(\"LinkedList\");\r\n    // linkedList.insert(\"A\", \"head\"); // head 추가, 맨 앞으로 데이터를 추가함\r\n    // linkedList.insert(\"B\", \"A\");\r\n    // linkedList.insert(\"C\", \"B\");\r\n    // linkedList.remove(\"B\");\r\n    // linkedList.append(\"D\");\r\n    // linkedList.append(\"E\");\r\n\r\n    // 각 수치 입력폼 함수\r\n    const conditionItem = () => {\r\n        const options = [\r\n            \"매출액\", \"매출총이익\", \"영업이익\", \"당기순이익\", \"매출액증가율\",\r\n            \"영업이익률\", \"부채비율\", \"당좌비율\", \"유동비율\", \"순이익증가율\", \"자산증가율\",\r\n            \"PER\", \"EPS\", \"PBR\", \"BPS\", \"BIS\", \"ROA\",\r\n            \"ROE\", \"자산회전율\"];\r\n\r\n        /*\r\n        매핑 예시\r\n            {finData.map(fin => {\r\n                return <td key={fin.year}>{moneyFormat(fin.revenue)}</td>\r\n            })}\r\n        */\r\n\r\n        // 맵핑? 위치는 어떻게 지정하지?\r\n        // 만들수 있는 최대 개수 = 각 지표 개수 + 종가\r\n        // set은 중복값을 허용하지 않는다. 이를 활용하여 아이템이 추가되더라도 같은 조건을 선택할수 없도록 강제한다.\r\n        const Item = \r\n            <div>\r\n                <select>\r\n                    {/* 옵션 매핑 */}\r\n                    {options.map(opt => {\r\n                        return <option>{opt}</option>\r\n                    })}\r\n                </select>\r\n                {/* 매출액, 매출총이익, 영업이익, 당기순이익은 억원으로 환산 안내 */}\r\n                <input type=\"number\" placeholder=\"최소\" />\r\n                ~\r\n                <input type=\"number\" placeholder=\"최대\" />\r\n                <input id='deleteBtn' type=\"button\" className=\"btn btn-default btn-sm\" onClick={onClickConditionDelete} value=\"삭제\" />\r\n            </div>;\r\n\r\n        return Item;\r\n    };\r\n\r\n\r\n    // doc에 조건 아이템을 추가\r\n    const onClickConditionAdd = () => {\r\n        // linked list를 사용해서 아이템을 추가 삭제하기 : 데이터를 중간에 삭제하거나 추가하기가 용이하다. 대신 구현이 어려움\r\n\r\n        // 조건 추가 제한 20개 (지표+종가)\r\n        if (itemArr.length < 5){\r\n            // itemArr[indexNum] = conditionItem();\r\n            // setIndexNum(indexNum+1);\r\n            // setItemArr(itemArr);\r\n\r\n            linkedList.append(conditionItem());\r\n            setItemArr(linkedList.element());\r\n            // alert(linkedList.element());\r\n        }\r\n    };\r\n\r\n    // doc에 조건 아이템 삭제\r\n    const onClickConditionDelete = () => {\r\n        // 조건 무조건 한 개는 남겨두기\r\n        // 위치를 어떻게 알수 있지?\r\n        delete itemArr[1];\r\n        console.log(itemArr);\r\n    };\r\n\r\n    // 선택한 옵션을 rootUrl과 join하여 쿼리스트링을 만들고 쿼리하여 조건에 맞는 기업리스트를 받아 온다.\r\n    const onSearchConditons = () => {\r\n        // select에서 선택한 옵션들을 캐치하는 장치 필요\r\n        // 해시 테이블로 각 옵션과 쿼리 스트링을 짝짓는다.\r\n    };\r\n\r\n    // 조건 테이블\r\n    const ConditionTable = () => {\r\n        const table = <div>\r\n            {itemArr.map(item => {\r\n                return item\r\n            })}\r\n            </div>;\r\n\r\n        // const table = \r\n        // <div>\r\n        //     {linkedList.map(item => {\r\n        //         return item.element()\r\n        //     })}\r\n        // </div>;\r\n\r\n        return table;\r\n    };\r\n\r\n    /* HTML */\r\n    return (\r\n        // 검색버튼을 누르면 조건입력창과 검색버튼은 hidden 상태,\r\n        <div className=\"per-input-box-div\">\r\n            <input className=\"btn btn-outline-primary\" type='button' value='검색' />\r\n            <input className=\"btn btn-outline-primary\" type='button' onClick={onClickConditionAdd} value='조건추가' />\r\n\r\n            <table className=\"table-responsive-md\" name=\"conditionTable\">\r\n                <thead>\r\n\r\n                    <tr>\r\n                        <th>지표</th>\r\n                    </tr>\r\n\r\n                </thead>\r\n                {/* tbody에 스크롤이 필요하다. */}\r\n                <tbody>\r\n\r\n                    <tr>\r\n                        {/* 이 div의 id를 지정해서 이 안에 아이템이 생기게 만들어야 한다. */}\r\n                        {/* <div>\r\n                            {itemArr.map(item => {\r\n                                return item\r\n                            })}\r\n                        </div> */}\r\n                        {ConditionTable()}\r\n\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\CompanyBoard.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\NotFound.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\LinkedList.js",["138"],"// LinkedList 구현\r\nexport default function LinkedList () {\r\n    this.head = new node(\"head\");\r\n    this.find = find;\r\n    this.append = append;\r\n    this.insert = insert;\r\n    this.remove = remove;\r\n    this.findPre = findPre;\r\n    this.element = element;\r\n\r\n// node 구현\r\nfunction node(data, next=null){\r\n    this.data = data;\r\n    this.next = next;\r\n};\r\n\r\n// 노드 찾기\r\nfunction find (item) {\r\n    let currNode = this.head;\r\n    while (currNode.data !== item) {\r\n        currNode = currNode.next;\r\n    }\r\n    return currNode;\r\n};\r\n\r\n// 이전 노드 찾기\r\nfunction findPre (item) {\r\n    let currNode = this.head;\r\n    while (currNode.next != null && currNode.next.data != item) {\r\n        currNode = currNode.next;\r\n    }\r\n    return currNode;\r\n};\r\n\r\n// 노드 추가\r\nfunction append (newData) {\r\n    let newNode = new node(newData);  // 새로운 노드 생성\r\n    let current = this.head;  // 시작 노드\r\n    while (current.next != null) {  // 맨 끝 노드 찾기\r\n        current = current.next;\r\n    }\r\n    current.next = newNode;\r\n};\r\n\r\n// 노드 중간 삽입\r\nfunction insert (newData, item) {\r\n    let newNode = new node(newData);  // 새로운 노드 생성\r\n    let current = this.find(item);  // 삽입할 위치의 노드 찾기\r\n    newNode.next = current.next;  // 찾은 노드가 가리키는 노드를 새로운 노드가 가리키기\r\n    current.next = newNode;  // 찾은 노드는 이제부터 새로운 노드를 가리키도록 하기\r\n};\r\n\r\n// 노드 삭제\r\nfunction remove (item) {\r\n    let preNode = this.findPre(item);  // 삭제할 노드를 가리키는 노드 찾기\r\n    preNode.next = preNode.next.next;  // 삭제할 노드 다음 노드를 가리키도록 하기\r\n};\r\n\r\n// 연결 리스트의 요소들을 출력 \r\nfunction element () {\r\n    let data = [];\r\n    let currNode = this.head;\r\n    while (currNode.next != null) {\r\n        data.push(currNode.next.data);\r\n        currNode = currNode.next;\r\n    };\r\n    return data;\r\n};\r\n};\r\n\r\n","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\FinSearchTable.js",["139","140","141","142","143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"145","replacedBy":"149"},{"ruleId":"147","replacedBy":"150"},{"ruleId":"145","replacedBy":"151"},{"ruleId":"147","replacedBy":"152"},{"ruleId":"145","replacedBy":"153"},{"ruleId":"147","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":21,"column":12,"nodeType":"157","messageId":"158","endLine":21,"endColumn":18},{"ruleId":"155","severity":1,"message":"159","line":25,"column":11,"nodeType":"157","messageId":"158","endLine":25,"endColumn":21},{"ruleId":"155","severity":1,"message":"160","line":39,"column":7,"nodeType":"157","messageId":"158","endLine":39,"endColumn":17},{"ruleId":"155","severity":1,"message":"161","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"162","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":21},{"ruleId":"155","severity":1,"message":"163","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":21},{"ruleId":"155","severity":1,"message":"164","line":28,"column":12,"nodeType":"157","messageId":"158","endLine":28,"endColumn":18},{"ruleId":"155","severity":1,"message":"165","line":28,"column":20,"nodeType":"157","messageId":"158","endLine":28,"endColumn":29},{"ruleId":"155","severity":1,"message":"166","line":4,"column":5,"nodeType":"157","messageId":"158","endLine":4,"endColumn":9},{"ruleId":"155","severity":1,"message":"167","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"168","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":60,"column":33,"nodeType":"171","endLine":60,"endColumn":56},{"ruleId":"155","severity":1,"message":"167","line":1,"column":36,"nodeType":"157","messageId":"158","endLine":1,"endColumn":44},{"ruleId":"155","severity":1,"message":"172","line":19,"column":17,"nodeType":"157","messageId":"158","endLine":19,"endColumn":25},{"ruleId":"155","severity":1,"message":"162","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":21},{"ruleId":"155","severity":1,"message":"172","line":16,"column":19,"nodeType":"157","messageId":"158","endLine":16,"endColumn":27},{"ruleId":"173","severity":1,"message":"174","line":24,"column":12,"nodeType":"175","endLine":24,"endColumn":18,"suggestions":"176"},{"ruleId":"155","severity":1,"message":"168","line":2,"column":27,"nodeType":"157","messageId":"158","endLine":2,"endColumn":36},{"ruleId":"155","severity":1,"message":"161","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"162","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":21},{"ruleId":"155","severity":1,"message":"177","line":4,"column":23,"nodeType":"157","messageId":"158","endLine":4,"endColumn":34},{"ruleId":"155","severity":1,"message":"178","line":4,"column":36,"nodeType":"157","messageId":"158","endLine":4,"endColumn":48},{"ruleId":"155","severity":1,"message":"179","line":17,"column":10,"nodeType":"157","messageId":"158","endLine":17,"endColumn":18},{"ruleId":"155","severity":1,"message":"180","line":17,"column":20,"nodeType":"157","messageId":"158","endLine":17,"endColumn":31},{"ruleId":"155","severity":1,"message":"181","line":20,"column":11,"nodeType":"157","messageId":"158","endLine":20,"endColumn":18},{"ruleId":"155","severity":1,"message":"182","line":95,"column":11,"nodeType":"157","messageId":"158","endLine":95,"endColumn":28},{"ruleId":"183","severity":1,"message":"184","line":29,"column":56,"nodeType":"185","messageId":"186","endLine":29,"endColumn":58},{"ruleId":"155","severity":1,"message":"168","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"177","line":3,"column":23,"nodeType":"157","messageId":"158","endLine":3,"endColumn":34},{"ruleId":"155","severity":1,"message":"178","line":3,"column":36,"nodeType":"157","messageId":"158","endLine":3,"endColumn":48},{"ruleId":"155","severity":1,"message":"187","line":16,"column":12,"nodeType":"157","messageId":"158","endLine":16,"endColumn":24},{"ruleId":"155","severity":1,"message":"188","line":16,"column":26,"nodeType":"157","messageId":"158","endLine":16,"endColumn":41},{"ruleId":"155","severity":1,"message":"189","line":52,"column":19,"nodeType":"157","messageId":"158","endLine":52,"endColumn":32},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],["190"],["191"],["190"],["191"],["190"],["191"],"no-unused-vars","'target' is assigned a value but never used.","Identifier","unusedVar","'targetTest' is assigned a value but never used.","'buttonText' is assigned a value but never used.","'axios' is defined but never used.","'useDispatch' is defined but never used.","'PerformSearch' is defined but never used.","'result' is assigned a value but never used.","'setResult' is assigned a value but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'compName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFinYearData'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'useSelector' is defined but never used.","'shallowEqual' is defined but never used.","'indexNum' is assigned a value but never used.","'setIndexNum' is assigned a value but never used.","'rootUrl' is assigned a value but never used.","'onSearchConditons' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'conditionArr' is assigned a value but never used.","'setConditionArr' is assigned a value but never used.","'priceQueryStr' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},"Update the dependencies array to be: [code, getFinYearData]",{"range":"195","text":"196"},[665,671],"[code, getFinYearData]"]