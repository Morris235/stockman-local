[{"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\index.js":"1","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\config.js":"2","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\UI\\atoms\\Button.js":"3","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\CompInfo.js":"4","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\store\\index.js":"5","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\UI\\atoms\\BoardInputForm.js":"6","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\rootReducer.js":"7","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\extra.js":"8","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\CompanyBoard.js":"9","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\RootReducer.js":"10","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\Extra.js":"11","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\Counter.js":"12","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\Paging.js":"13","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\HTTP.js":"14","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\Home.js":"15","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\NotFound.js":"16","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\Router.js":"17","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\TitleBar.js":"18"},{"size":1332,"mtime":1624685271906,"results":"19","hashOfConfig":"20"},{"size":436,"mtime":1615871790651,"results":"21","hashOfConfig":"20"},{"size":719,"mtime":1616582396855,"results":"22","hashOfConfig":"20"},{"size":2405,"mtime":1625029305476,"results":"23","hashOfConfig":"20"},{"size":235,"mtime":1614057590430,"results":"24","hashOfConfig":"20"},{"size":1193,"mtime":1625029349568,"results":"25","hashOfConfig":"20"},{"size":699,"mtime":1616047365748,"results":"26","hashOfConfig":"20"},{"size":255,"mtime":1616047354951,"results":"27","hashOfConfig":"20"},{"size":701,"mtime":1625029154832,"results":"28","hashOfConfig":"20"},{"size":868,"mtime":1618223544962,"results":"29","hashOfConfig":"20"},{"size":255,"mtime":1616047354951,"results":"30","hashOfConfig":"20"},{"size":2929,"mtime":1618032015001,"results":"31","hashOfConfig":"20"},{"size":6376,"mtime":1624685235966,"results":"32","hashOfConfig":"20"},{"size":2061,"mtime":1625029014845,"results":"33","hashOfConfig":"20"},{"size":2966,"mtime":1624686293343,"results":"34","hashOfConfig":"20"},{"size":270,"mtime":1618127414644,"results":"35","hashOfConfig":"20"},{"size":2045,"mtime":1624684810364,"results":"36","hashOfConfig":"20"},{"size":778,"mtime":1624684297804,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zefywn",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\index.js",[],["80","81"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\config.js",[],["82","83"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\UI\\atoms\\Button.js",[],["84","85"],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\CompInfo.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\store\\index.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\UI\\atoms\\BoardInputForm.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\rootReducer.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\extra.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\CompanyBoard.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\RootReducer.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\Extra.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\modules\\Counter.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\Paging.js",["86","87","88"],"\r\n/** @jsxImportSource @emotion/react */\r\n// 위의 주석 삭제해 버리고 싶다. \r\nimport { useState, useRef } from \"react\";\r\n// import axios from 'axios';\r\n\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { updateCurrnetPage } from '../modules/Counter';\r\nimport { css } from '@emotion/react';\r\n\r\n\r\n\r\nexport default function Pagination () {\r\n\r\n    const {totalPostsCount} = useSelector(\r\n        state => ({\r\n            totalPostsCount: state.counter.totalPosts,\r\n        }), shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n    const [postsPerPage] = useState(100);  // 한페이지에 표시하는 게시물수 -> 백엔드에서 자동으로 참조받을수 있어야함\r\n    const [currentPageNumber, setCurrentPageNumber] = useState(1); // 현재 사용자가 보고 있는 페이지 : 1번\r\n    const [target, setTarget] = useState();\r\n    const pageRef = useRef(0);\r\n\r\n    // DOM에 함수를 전달할 때 객체 자체를 전달하면(괄호없이) event객체를 함수에 인자로 전달할수 있다. \r\n    const targetTest = (e) => { // 이벤트 풀링 릴리즈 17부터 이벤트 풀링은 제거됨?\r\n        const value = e.currentTarget.id;\r\n        setTarget(value);\r\n    };\r\n\r\n    /* 전체 페이지 배열을 표시할 게시물수(10개) 단위로 나누기, ceil로 나머지수 올림 */ \r\n    const totalPageCount = Math.ceil(totalPostsCount / postsPerPage); // 242\r\n\r\n    /* Array.from()으로 길이가 totalCount, 값이 (1~totalCount+1)인 배열 생성 */\r\n    const pagesArray = Array.from({length: totalPageCount}, (v, i) => i+1); //1~242\r\n\r\n\r\n/* emotion CSS */ \r\n// 머티리얼 UI 버튼에는 적용 안되고 그 안에 텍스트는 적용됨\r\nconst buttonText = css`\r\nfont-size: 14px;\r\n&:hover {\r\n    color: blue;\r\n}\r\n`;\r\n\r\n/* Mui theme */\r\n// const useStyles = makeStyles(theme => ({\r\n//     pageBtn : {\r\n//         backgroundColor : '',\r\n//         borderRadius : '20px',\r\n//         '&:hover': {\r\n//             backgroundColor : '#B8DFF8',\r\n//         },\r\n//     },\r\n//     startEndBtn : {\r\n//         backgroundColor : '',\r\n//         '&:hover': {\r\n//             backgroundColor : '#B8DFF8'\r\n//         }\r\n//     },\r\n//     div : {\r\n//         marginTop : '10px',\r\n//     },\r\n//     clickedBtn : {\r\n//         backgroundColor : 'red',\r\n//     },\r\n// }));\r\n// const classes = useStyles();\r\n\r\n\r\n\r\n    /* 페이지 넘버 클릭 특정 함수 */\r\n    const OnClicked = (pageNum) => {\r\n        setCurrentPageNumber(pageNum);\r\n        dispatch(updateCurrnetPage(pageNum));\r\n    };\r\n\r\n    /* 처음, 끝 버튼 클릭 함수 */\r\n    const OnStartEndClicked = (assignPageNum) => {\r\n        dispatch(updateCurrnetPage(assignPageNum));\r\n        setCurrentPageNumber(assignPageNum);\r\n    };\r\n\r\n\r\n\r\n\r\n    /*왜 코드를, 기능을 이렇게 작성했는지 이유와 근거를 써놓으면 나중에 이 코드에 대해 누군가에게 설명할 때 딴소리나 개소리를 안할 수 있다.*/\r\n    /**\r\n     * inputCurrPageNum : currentPageNumber (useState(1))\r\n     * pageArr : pagesArray (길이가 totalCount, 값이 (1~totalCount+1)인 배열. 전체 페이지수의 값이 담긴 배열)\r\n     * startIndex : currPageNum의 값으로부터 -6인 숫자\r\n     * endIndex : currPageNum의 값으로부터 +5인 숫자 \r\n     * ex) currPageNum = 10, startIndex = 4(값:5), endIndex = 15(값:16) 따라서 pageArr.slice(4, 15) 값이 5~15까지인 배열을 만들어 리턴한다.\r\n     * 새로운 배열을 만들어 리턴했기 때문에 인덱스는 항상 0~9다.\r\n     * \r\n    */\r\n    const createSlicedArray = (inputCurrPageNum, pageArr) => { \r\n        let [start, end] = [];\r\n        let startIndex = (inputCurrPageNum - 6);\r\n        let endIndex = (inputCurrPageNum + 5);\r\n        // console.log(\"paging's currPageNum: \"+currPageNum);\r\n\r\n        // 새로고침 눌렀을 때 클릭했던 페이지에 그대로 머물게 해야함 : useRef로 새로고침 감지? 감지되면 기존 페이지 인덱스, 선택 페이지 정보 남기기\r\n        // useRef 를 사용하면?\r\n\r\n        // outOfIndexBend 예외처리 \r\n        if(startIndex < 0) {\r\n            startIndex = 0;\r\n        } else if (endIndex > totalPageCount) {\r\n            endIndex = totalPageCount;\r\n        }\r\n        [start, end] = [startIndex, endIndex];\r\n\r\n        // 처음 10페이지를 표시: 10페이지를 선택하면 15페이지까지, 이전 5페이지까지 보여준다. 1~9페이지까지는 동적 변동 없다.\r\n        if(currentPageNumber < 10){\r\n            return pageArr.slice(0, 10); // 10페이지 미만으로 선택할시 페이징 변화 없음\r\n        }else {\r\n            return pageArr.slice(start, end);; // 10페이지 이상으로 선택할시에 동적으로 11개씩 페이징\r\n        }\r\n    };\r\n\r\n \r\n        /* 페이징 UI 처리 하기 */\r\n        // <div style={{float:'left'}}>\r\n        // css 적용: className={classes.primary}\r\n        return (\r\n            <div className=\"\">\r\n                {/* <button id='asd' onClick={targetTest}>target test</button> */}\r\n                <button className=\"\" onClick={() => OnStartEndClicked(1)}>처음</button>\r\n                {/* <button id='sss'>test button</button> */}\r\n                {\r\n                // OnClicked() 메서드에서 업데이트한 currentPageNumber를 Paging() 메서드에 보내서 페이징 배열을 재생성한다.\r\n                createSlicedArray(currentPageNumber, pagesArray).map((currentValue, index, array) => {\r\n                    // {console.log('HTML id: '+currentValue);}\r\n                    return ( \r\n                        <button\r\n                        id={currentValue}\r\n                        ref={pageRef}\r\n                        variant='text'\r\n                        key={index} \r\n                        className=\"\"\r\n                        // onClicked() 메서드는 클릭한 인덱스의 값을 setCurrentPageNumber(currentValue)하여 currentPageNumber를 업데이트 시킨다.\r\n                        // 값을 dispatch한다.\r\n                        onClick= { () => OnClicked(currentValue) }> \r\n                        {currentValue} \r\n                        </button> \r\n                );\r\n                })}\r\n                <button className=\"\" onClick={() => OnStartEndClicked(totalPageCount)}>끝</button>\r\n            </div>\r\n        );\r\n}","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\HTTP.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\Home.js",["89","90","91"],"import React, { useEffect, useState }  from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Home () {\r\n\r\n    return (\r\n        <div>\r\n            <hr className=\"\"/>\r\n        </div>\r\n    )\r\n\r\n    // const [compsPosts, setCompPosts] = useState([]);\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [error, setError] = useState(null);\r\n\r\n    // // REST-API 서버에서 기업이름과 코드를 비동기로 받아오는 코드\r\n    // const fetchComps = async() => {\r\n    //     try {\r\n    //         setError(null);\r\n    //         setCompPosts(null);\r\n    //         setLoading(true);\r\n\r\n    //         const url = `http://localhost:8000/company_state/?page=1&data\r\n    //         cache-control: max-age=60\r\n    //         Cache-Control: no-store`; \r\n    //         const response = await axios.get(url);\r\n\r\n    //         console.log(response.data.results.map(comps => {return comps.year}));\r\n    //         // if (response.data.results.map(comps => {return comps.year}) === '2020'){\r\n    //         //     console.log('ddd');\r\n    //         // }\r\n\r\n    //         setCompPosts(response.data.results);\r\n    //     } catch(e) {\r\n    //         setError(e);\r\n    //     }\r\n    //     setLoading(false);\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     fetchComps();\r\n    // }, []);\r\n\r\n    // if (loading) return <div>loading...</div>;\r\n    // if (error) return <div>error.</div>;\r\n    // if (!compsPosts) return null;\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <p>updated: 2021-05-23</p>\r\n    //         <table className='table table-hover text-center'>\r\n    //             <thead>\r\n    //                 <tr>\r\n    //                     <th>기업명</th>\r\n    //                     <th>종목코드</th>\r\n    //                     <th>시장</th>\r\n    //                     <th>결산년도</th>\r\n    //                     <th>시가총액</th>\r\n    //                     <th>안정성</th>\r\n    //                     <th>성장성</th>\r\n    //                     <th>가치성</th>\r\n    //                     <th>수익성</th>\r\n    //                     <th>즐겨찾기</th>\r\n    //                 </tr>\r\n    //             </thead>\r\n    //             <tbody>\r\n    //             {compsPosts.map(comps => {\r\n    //                 return (\r\n    //                 <tr key={comps.code}> \r\n    //                     <td>{comps.company_nm}</td> \r\n    //                     <td>{comps.code}</td> \r\n    //                     <td>{comps.mk}</td>\r\n    //                     <td>{comps.year}</td>\r\n    //                     <td>150억</td>\r\n    //                     <td>양호</td>\r\n    //                     <td>양호</td>\r\n    //                     <td>우수</td>\r\n    //                     <td>위험</td>\r\n    //                     <td>*</td>\r\n    //                     </tr>);\r\n    //             })}\r\n    //             </tbody>\r\n    //         </table>\r\n    //     </div>\r\n    // );\r\n}","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\NotFound.js",[],"C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\apps\\Router.js",["92"],"import React from 'react';\r\nimport { BrowserRouter as Router,\r\n    Route, \r\n    Link, \r\n    Switch } from 'react-router-dom';\r\n\r\n\r\n/* components */\r\nimport CompanyBoard from './CompanyBoard';\r\nimport NotFound from './NotFound';\r\nimport Home from './Home';\r\nimport TitleBar from '../components/TitleBar';\r\n\r\nexport default function Routing () {\r\n\r\n    // url 이동할 때 이전 앱의 상태값은 날라가지 않는다.\r\n    // 개발진행이 멈칫할때는 이해 안되는 부분 파악해서 바로 공부하기\r\n    // 현재 문제점 컴포넌트 자체에 링크를 걸어버려서 해당 컴포넌트 안에 어떤 요소가 있던 클릭하면 같은 위치로 이동되버린다.\r\n    // 라우터 사용법을 좀 더 공부해야한다. (라우터 기능의 개념 이해하기)\r\n    return (\r\n        <Router>\r\n            <header>\r\n                <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n                    <div class=\"container\">\r\n                        <Link to=\"/\" class=\"navbar-brand\">STOCKMAN</Link>\r\n                        <div class=\"me-auto navbar-nav\">\r\n                            {/* <a href=\"#home\" data-rb-event-key=\"#home\" class=\"nav-link\">메뉴1</a>\r\n                            <a href=\"#features\" data-rb-event-key=\"#features\" class=\"nav-link\">메뉴2</a>\r\n                            <a href=\"#pricing\" data-rb-event-key=\"#pricing\" class=\"nav-link\">메뉴3</a> */}\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n\r\n                    <ul>\r\n                        <li><Link to=\"/companylist\">기업리스트</Link></li>\r\n                    </ul>\r\n\r\n                {/* 주소창의 경로와 매칭될 경우 보여줄 컴포넌트 할당 */}\r\n                <Switch>\r\n                    <Route path=\"/\"  exact={true}><Home /></Route>\r\n                    <Route path=\"/companylist\"><CompanyBoard /></Route>\r\n                    <Route path=\"*\"><NotFound /></Route>\r\n                </Switch>\r\n\r\n        </Router>\r\n    );\r\n}","C:\\Pyvenv\\projects\\site\\stockman\\frontend\\src\\components\\TitleBar.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"93","replacedBy":"99"},{"ruleId":"95","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":23,"column":12,"nodeType":"103","messageId":"104","endLine":23,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":27,"column":11,"nodeType":"103","messageId":"104","endLine":27,"endColumn":21},{"ruleId":"101","severity":1,"message":"106","line":41,"column":7,"nodeType":"103","messageId":"104","endLine":41,"endColumn":17},{"ruleId":"101","severity":1,"message":"107","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"108","line":1,"column":28,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"109","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":13},{"ruleId":"101","severity":1,"message":"110","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":16},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],["111"],["112"],"no-unused-vars","'target' is assigned a value but never used.","Identifier","unusedVar","'targetTest' is assigned a value but never used.","'buttonText' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'TitleBar' is defined but never used.","no-global-assign","no-unsafe-negation"]